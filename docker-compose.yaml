services:
    postgres:
        container_name: dims-postgres
        image: postgis/postgis:17-3.5
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_SCHEMA}
        volumes:
            - postgres:/var/lib/postgresql/data
        ports:
            - ${POSTGRES_PORT}:5432
        networks:
            - dims
        restart: on-failure:10
    api:
        container_name: dims-api
        build:
            dockerfile: Dockerfile.api
            target: development
        volumes:
            - .:/app
        environment:
            DATABASE_URL: "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_SCHEMA}"
        ports:
            - ${PORT}:${PORT}
        depends_on:
            - postgres
            - influx
        networks:
            - dims
        restart: on-failure:10
    influx:
        container_name: dims-influx
        image: influxdb:2
        environment:
            DOCKER_INFLUXDB_INIT_MODE: setup
            DOCKER_INFLUXDB_INIT_USERNAME: ${INFLUXDB_USER}
            DOCKER_INFLUXDB_INIT_PASSWORD: ${INFLUXDB_PASSWORD}
            DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: ${INFLUXDB_TOKEN}
            DOCKER_INFLUXDB_INIT_ORG: ${INFLUXDB_ORG}
            DOCKER_INFLUXDB_INIT_BUCKET: ${INFLUXDB_BUCKET}
        volumes:
            - type: volume
              source: influx-data
              target: /var/lib/influxdb2
            - type: volume
              source: influx-config
              target: /etc/influxdb2
        ports:
            - ${INFLUXDB_PORT}:8086
        networks:
            - dims
        restart: on-failure:10
volumes:
    postgres:
    influx-data:
    influx-config:
networks:
    dims:
        driver: bridge
        driver_opts:
            com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
